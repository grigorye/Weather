//
//  CityProviderImp.swift
//  CityApp
//
//  Created by Grigory Entin on 07/05/2018.
//  Copyright Â© 2018 Grigory Entin. All rights reserved.
//

import OpenWeatherMapKit
import Result

extension CityProviderImp_OpenWeatherMap$ {
    
    struct CityProviderImp : CityProvider {
        
        typealias CityQuerying = OpenWeatherMapKit.CityQuerying
        
        var cityQuerying: CityQuerying!
        
        init(cityQuerying: CityQuerying) {
             self.cityQuerying = cityQuerying
        }

        func queryCity(matching text: String, completion: @escaping (CityQueryResult) -> Void) -> DisposableQuery {
            return cityQuerying.queryCity(matching: text) { (result) in
                switch result {
                case .failure(let error):
                    completion(.failure(AnyError(error)))
                    return
                case .success(let openWeatherCityInfos):
                    let cityInfos = openWeatherCityInfos.map { CityInfo(cityId: "\($0.id)", cityName: $0.name) }
                    completion(.success(cityInfos))
                }
            }
        }
    }
}

extension CityProviderImp_OpenWeatherMap$$ /* *** AUTOGENERATED *** */ {
    typealias CityProviderImp = CityProviderImp_OpenWeatherMap$.CityProviderImp
}
